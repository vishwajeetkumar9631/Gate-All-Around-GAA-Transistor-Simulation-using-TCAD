* This parameter file and the associated documentation are proprietary
* to Synopsys, Inc.  This parameter file may only be used in accordance
* with the terms and conditions of a written license agreement with
* Synopsys, Inc.  All other use, reproduction, or distribution of this
* parameter file is strictly prohibited.


Epsilon
{ *  Ratio of the permittivities of material and vacuum

  * epsilon() = epsilon
	epsilon	= 3.9	# [1]
}


Epsilon_Inf
{ *  Ratio of the high frequency limit of permittivities of material and vacuum

  * epsilon_inf() = epsilon_inf
	epsilon_inf	= 2.25	# [1]
}


Epsilon_aniso
{ *  Ratio of the permittivities of material and vacuum

  * epsilon() = epsilon
	epsilon	= 3.9	# [1]
}


Epsilon_Inf_aniso
{ *  Ratio of the high frequency limit of permittivities of material and vacuum

  * epsilon_inf() = epsilon_inf
	epsilon_inf	= 2.25	# [1]
}


RefractiveIndex
{ *  Optical Refractive Index

  * refractiveindex() = refractiveindex * (1 + alpha * (T-Tpar))
	Tpar	= 3.0000e+02	# [K]
	refractiveindex	= 1.46	# [1]
	alpha	= 2.0000e-04	# [1/K]

  * Gain dependence of refractive index in active region:
  * a) Linear model: delta n = a0 * ( (n+p)/(2 * N0) - 1)
  * b) Logarithmic model: delta n = a0 * log ( (n+p)/(2 * N0) )
  * where n/p are the carrier densities in the active region. 
	a0	= 0.0000e+00	# [1]
	N0	= 1.0000e+18	# [1/cm^3]
}


ComplexRefractiveIndex
{ *  Complex refractive index model: n_complex = n + i*k (unitless)
  *  
  *  with n = n_0 + delta_n_lambda + delta_n_T + delta_n_carr + delta_n_gain 
  *       k = k_0 + delta_k_lambda             + delta_k_carr                
  
  * Base refractive index and extinction coefficient: 
  *     n_0, k_0 
  
  * Wavelength dependence (real and imag): 
  *     Formula 0: delta_n_lambda = Cn_lambda * lambda + Dn_lambda * lambda^2 
  *                delta_k_lambda = Ck_lambda * lambda + Dk_lambda * lambda^2 
  *     Formula 1: Read tabulated values 
  *                NumericalTable (...)  
  *     Formula 2: Read tabulated values from file 
  *                NumericalTable = <string> 
  
  * Temperature dependence (real): 
  *     delta_n_T = n_0 * ( Cn_temp * (T-Tpar)) 
  
  * Carrier dependence (real) 
  *     delta_n_carr = - Cn_carr * (const.) * (n/m_e + p/m_h) 
  
  * Carrier dependence (imag) 
  *     delta_k_carr = 1 / (4*PI) * (wavelength^Gamma_k_carr_e*Ck_carr_e*n + wavelength^Gamma_k_carr_h*Ck_carr_h*p) 
  
  * Gain dependence (real) 
  *     lin: delta_n_gain = Cn_gain * ( (n+p)/(2 * Npar) - 1) 
  *     log: delta_n_gain = Cn_gain * log ( (n+p)/(2 * Npar ) )
	n_0	= 1.46	# [1]
	k_0	= 0.0000e+00	# [1]
	Cn_lambda	= 0.0000e+00	# [um^-1]
	Dn_lambda	= 0.0000e+00	# [um^-2]
	Ck_lambda	= 0.0000e+00	# [um^-1]
	Dk_lambda	= 0.0000e+00	# [um^-2]
	Cn_temp	= 2.0000e-04	# [K^-1]
	Cn_carr	= 1	# [1]
	Ck_carr	= 0.0000e+00 ,	0.0000e+00	# [cm^2]
	Gamma_k_carr	= 1 ,	1	# [1]
	Cn_gain	= 0.0000e+00	# [1]
	Npar	= 1.0000e+18	# [cm^-3]
        Formula = 1
        TableInterpolation = PositiveSpline, PositiveSpline
        NumericalTable ( 
          0.051	0.804	0.322;
          0.053	0.811	0.366;
          0.055	0.822	0.408;
          0.056	0.829	0.43;
          0.058	0.843	0.47;
          0.059	0.851	0.482;
          0.0636	0.879	0.613;
          0.0653	0.902	0.645;
          0.067	0.927	0.677;
          0.0689	0.957	0.712;
          0.0699	0.975	0.731;
          0.0709	0.999	0.75;
          0.0719	1.03	0.763;
          0.0729	1.072	0.768;
          0.074	1.124	0.765;
          0.0751	1.137	0.755;
          0.0763	1.156	0.737;
          0.0775	1.172	0.717;
          0.0787	1.178	0.703;
          0.08	1.172	0.696;
          0.0813	1.167	0.699;
          0.0827	1.168	0.711;
          0.0841	1.175	0.739;
          0.0855	1.195	0.771;
          0.087	1.225	0.799;
          0.0886	1.265	0.808;
          0.0902	1.32	0.795;
          0.0919	1.363	0.775;
          0.0936	1.371	0.755;
          0.0954	1.368	0.747;
          0.0972	1.372	0.766;
          0.0992	1.383	0.793;
          0.1012	1.41	0.824;
          0.1033	1.475	0.861;
          0.1051	1.554	0.874;
          0.1069	1.635	0.859;
          0.1088	1.716	0.81;
          0.1127	1.739	0.569;
          0.1137	1.687	0.565;
          0.1148	1.587	0.618;
          0.1159	1.513	0.725;
          0.117	1.492	0.914;
          0.1181	1.567	1.11;
          0.1187	1.645	1.136;
          0.1192	1.772	1.13;
          0.1198	1.919	1.045;
          0.1204	2.048	0.925;
          0.121	2.152	0.81;
          0.1215	2.24	0.715;
          0.1228	2.332	0.46;
          0.124	2.33	0.323;
          0.1252	2.292	0.236;
          0.1265	2.243	0.168;
          0.1278	2.19	0.119;
          0.1291	2.14	0.077;
          0.1319	2.047	0.043;
          0.1333	2.006	0.0339;
          0.1348	1.969	0.0271;
          0.1362	1.935	0.0228;
          0.1378	1.904	0.0189;
          0.1393	1.876	0.0156;
          0.1409	1.85	0.0132;
          0.1425	1.825	0.0109;
          0.1442	1.803	8.3800e-03;
          0.1459	1.783	5.5700e-03;
          0.1476	1.764	3.1700e-03;
          0.1494	1.747	1.4000e-03;
          0.1512	1.73	4.6300e-04;
          0.1531	1.716	1.2200e-04;
          0.155	1.702	3.2000e-05;
          0.159	1.676	4.7000e-06;
          0.1631	1.653	0.0000e+00;
          0.1675	1.633	0.0000e+00;
          0.1722	1.616	0.0000e+00;
          0.1771	1.6	0.0000e+00;
          0.1837	1.582	0.0000e+00;
          0.1907	1.567	0.0000e+00;
          0.1984	1.554	0.0000e+00;
          0.2066	1.543	0.0000e+00;
          0.2144	1.53371	0.0000e+00;
          0.2267	1.52276	0.0000e+00;
          0.2302	1.52009	0.0000e+00;
          0.2378	1.51474	0.0000e+00;
          0.2399	1.51338	0.0000e+00;
          0.2483	1.50841	0.0000e+00;
          0.2652	1.50004	0.0000e+00;
          0.2699	1.49805	0.0000e+00;
          0.2753	1.49592	0.0000e+00;
          0.2803	1.49404	0.0000e+00;
          0.2894	1.49099	0.0000e+00;
          0.2967	1.48873	0.0000e+00;
          0.30215	1.48719	0.0000e+00;
          0.3303	1.48053	0.0000e+00;
          0.33415	1.47976	0.0000e+00;
          0.3404	1.47858	0.0000e+00;
          0.3466	1.47746	0.0000e+00;
          0.36105	1.47512	0.0000e+00;
          0.365	1.47453	0.0000e+00;
          0.40465	1.46961	0.0000e+00;
          0.4358	1.46669	0.0000e+00;
          0.4678	1.46429	0.0000e+00;
          0.4861	1.46313	0.0000e+00;
          0.5086	1.46197	0.0000e+00;
          0.5461	1.46008	0.0000e+00;
          0.577	1.45885	0.0000e+00;
          0.5791	1.45877	0.0000e+00;
          0.5876	1.45847	0.0000e+00;
          0.5893	1.45841	0.0000e+00;
          0.64385	1.45671	0.0000e+00;
          0.6563	1.45637	0.0000e+00;
          0.6678	1.45608	0.0000e+00;
          0.7065	1.45515	0.0000e+00;
          0.8521	1.45248	0.0000e+00;
          0.89435	1.45185	0.0000e+00;
          1.014	1.45025	0.0000e+00;
          1.0829	1.44941	0.0000e+00;
          1.1287	1.44888	0.0000e+00;
          1.3622	1.44621	0.0000e+00;
          1.3951	1.44584	0.0000e+00;
          1.4695	1.44497	0.0000e+00;
          1.5295	1.44427	0.0000e+00;
          1.6606	1.44267	0.0000e+00;
          1.681	1.44241	0.0000e+00;
          1.6932	1.44226	0.0000e+00;
          1.7091	1.44205	0.0000e+00;
          1.8131	1.44069	0.0000e+00;
          1.9701	1.43851	0.0000e+00;
          2.0581	1.43722	0.0000e+00;
          2.1526	1.43576	0.0000e+00;
          2.3254	1.43292	0.0000e+00;
          2.4374	1.43095	0.0000e+00;
          3.2439	1.41314	0.0000e+00;
          3.2668	1.41253	0.0000e+00;
          3.3026	1.41155	0.0000e+00;
          3.422	1.40819	0.0000e+00;
          3.507	1.40568	0.0000e+00;
          3.5564	1.40418	0.0000e+00;
          10	1.4	0.0000e+00;
          10.001	1.4	0.0000e+00;
          10.002	1.4	0.0000e+00;
        ) 
	Tpar	= 3.0000e+02	# [K]
} 


* SpectralConversion
* { * Spectral Conversion Model
*   No default model, user has to define.
*   All wavelength parameters should be in nanometers.
*   Choice of Analytic or NumericalTable selected in Physics section of region
*  
*   ConversionEfficiency = float     * ratio of absorbed photons that are reemitted.
*   AbsorptionScaling = float        * scale absorption
*   EmissionScaling = float          * scale emission
*   Analytic (
*     AbsorptionProfile = (
*        Gaussian(lambda0 sigma peakvalue dc_offset lambda_range0 lambda_range1)
*        Lorentzian(lambda0 width peakvalue dc_offset lambda_range0 lambda_range1)
*        ...
*     )
*     EmissionProfile = (
*        Gaussian(lambda0 sigma peakvalue dc_offset lambda_range0 lambda_range1)
*        Lorentzian(lambda0 width peakvalue dc_offset lambda_range0 lambda_range1)
*        ...
*     )
*   )
*   NumericalTable (
*     AbsorptionProfile = (
*        lambda0 value0
*        lambda1 value1
*        ...
*     )
*     EmissionProfile = (
*        lambda0 value0
*        lambda1 value1
*        ...
*     )

*   ConversionEfficiency = 1.0
* }


LatticeHeatCapacity
{ *  lumped electron-hole-lattice heat capacity

  * cv() = cv + cv_b * T + cv_c * T^2 + cv_d * T^3 
	cv	= 1.67	# [J/(K cm^3)]
	cv_b	= 0.0000e+00	# [J/(K^2 cm^3)]
	cv_c	= 0.0000e+00	# [J/(K^3 cm^3)]
	cv_d	= 0.0000e+00	# [J/(K^4 cm^3)]
}


Kappa
{ *  Lattice thermal conductivity

  * Formula = 0:
  * kappa() = 1 / ( 1/kappa + 1/kappa_b * T + 1/kappa_c * T^2 )

  * Formula = 1:
  * kappa() = kappa + kappa_b * T + kappa_c * T^2 

  Formula = 1
	kappa	= 0.025	# [W/(K cm)]
	kappa_b	= 0.0000e+00	# [W/(K^2 cm)]
	kappa_c	= 0.0000e+00	# [W/(K^3 cm)]

}


Kappa_aniso
{ *  Lattice thermal conductivity

  * Formula = 0:
  * kappa() = 1 / ( 1/kappa + 1/kappa_b * T + 1/kappa_c * T^2 )

  * Formula = 1:
  * kappa() = kappa + kappa_b * T + kappa_c * T^2 

  Formula = 1
	kappa	= 0.025	# [W/(K cm)]
	kappa_b	= 0.0000e+00	# [W/(K^2 cm)]
	kappa_c	= 0.0000e+00	# [W/(K^3 cm)]

}

Bandgap
{ * Eg = Eg0 + alpha Tpar^2 / (beta + Tpar) - alpha T^2 / (beta + T)
  * Parameter 'Tpar' specifies the value of lattice 
  * temperature, at which parameters below are defined
  * Chi0 is electron affinity.
	Chi0	= 0.9	# [eV]
	Eg0	= 9	# [eV]
	alpha	= 0.0000e+00	# [eV K^-1]
	beta	= 0.0000e+00	# [K]
	alpha2	= 0.0000e+00	# [eV K^-1]
	beta2	= 0.0000e+00	# [K]
	EgMin	= -1.0000e+01	# [eV]
	dEgMin	= 0.0000e+00	# [eV]
	Tpar	= 0.0000e+00	# [K]
}

FreeCarrierAbsorption
{
  * Coefficients for free carrier absorption:
  * fcaalpha_n for electrons,
  * fcaalpha_p for holes

  * FCA = (alpha_n * n + alpha_p * p) * Light Intensity
	fcaalpha_n	= 4.0000e-18	# [cm^2]
	fcaalpha_p	= 8.0000e-18	# [cm^2]
}

QWStrain
{
  * Zincblende crystals:
  *   Parameters: a_nu, a_c, b, C_12, C_11
  *   StrainConstant eps (formula = 1) or lattice constant
  *   a0 (formula = 2) for energy shift of quantum-well
  *   subbands.
  *   a0(T) = a0 + alpha (T-Tpar)

  * Wurtzite crystals:
  *   Parameters: a_c, D1, D2, D3, D4, C_13, C_33
  *   Lattice constants a0 and c0 (formula 2 must be used)
  *   a0(T) = a0 + alpha (T-Tpar)
  *   c0(T) = c0 + alpha (T-Tpar)

	  * Default formula	= 1	# [1]
	eps	= 0.0000e+00	# [1]
	a0	= 3.1890e-10	# [cm]
	alpha	= 0.0000e+00	# [cm/K]
	Tpar	= 3.0000e+02	# [K]
	a_nu	= 0.0000e+00	# [eV]
	a_c	= -4.0800e+00	# [eV]
	b_shear	= 0.0000e+00	# [eV]
	c_11	= 0.0000e+00	# [1e-2 GPa]
	c_12	= 0.0000e+00	# [1e-2 GPa]
	d1	= -8.9000e-01	# [eV]
	d2	= 4.27	# [eV]
	d3	= 5.18	# [eV]
	d4	= -2.5900e+00	# [eV]
	c_13	= 1	# [1e-2 GPa]
	c_33	= 3.92	# [1e-2 GPa]
	c0	= 5.1850e-10	# [cm]
}

eDOSMass
{
  * For effective mass specification Formula1 (me approximation):
  * or Formula2 (Nc300) can be used :
	Formula	= 1	# [1]
  * Formula1:
  * me/m0 = [ (6 * mt)^2 *  ml ]^(1/3) + mm
  * mt = a[Eg(0)/Eg(T)] 
  * Nc(T) = 2(2pi*kB/h_Planck^2*me*T)^3/2 = 2.5094e19 ((me/m0)*(T/300))^3/2 
	a	= 0.0000e+00	# [1]
	ml	= 0.0000e+00	# [1]
	mm	= 0.42	# [1]
}

hDOSMass
{
  * For effective mass specification Formula1 (mh approximation):
  * or Formula2 (Nv300) can be used :
	Formula	= 1	# [1]
  * Formula1:
  * mh =  m0*{[(a+bT+cT^2+dT^3+eT^4)/(1+fT+gT^2+hT^3+iT^4)]^(2/3) + mm}
  * Nv(T) = 2(2pi*kB/h_Planck^2*mh*T)^3/2 = 2.5094e19 ((mh/m0)*(T/300))^3/2 
	a	= 0	# [1]
	b	= 0	# [K^-1]
	c	= 0	# [K^-2]
	d	= 0	# [K^-3]
	e	= 0	# [K^-4]
	f	= 0	# [K^-1]
	g	= 0	# [K^-2]
	h	= 0	# [K^-3]
	i	= 0	# [K^-4]
	mm	= 1	# [1]
}

SchroedingerParameters:
{ * For the hole masses for Schroedinger equation you can
  * use different formulas.
  * 0: use the isotropic density of states effective mass
  * 1: (for materials with Si-like hole band structure)
  *    m(k)/m0=1/(A+-sqrt(B+C*((xy)^2+(yz)^2+(zx)^2)))
  *    where k=(x,y,z) is unit normal vector in reziprocal
  *    space.  '+' for light hole band, '-' for heavy hole band
  * 2: Heavy hole mass mh and light hole mass ml are
  *    specified explicitly.
  *    Use me as electron mass for free-carrier effect in 
  *    the refractive index model.
  * For electron masses, the following formula options exist:
  * 0: use the isotropic density of states effective mass
  * 1: (for materials with Si-like hole band structure)
  *    use the a, ml, and mm parameters from eDOSMass.
  *    Typically, this leads to anisotropy.
	formula	= 0 ,	2	# [1]
  * Formula(hole) 2 parameters:
	ml	= 0.629961	# [1]
	mh	= 0.629961	# [1]
	me	= 0.0000e+00	# [1]
  * Lifting of degeneracy of bulk valleys. The value for
  * electrons is added to the band edge for the subband
  * ladder of lower degeneracy if positive, and subtracted
  * from the band edge for the ladder of higher degeneracy
  * if negative. (that is, the value of the band edge is
  * always increased).  For holes, the value is subtracted from
  * the band edge for the heavy hole band is positive,
  * add added tp that of the light hole band if
  * negative.  The signs are such that the shift always
  * moves the band edges 'outward', away from midgap.  The
  * gap itself is defined as the separation of the
  * unshifted band edges and remains unaffected.
	offset	= 0.0000e+00 ,	0.0000e+00	# [eV]
  * Alternative to the specification of formula, offset,
  * and masses, you can make an arbitrary number of ladder
  * specification, 'eLadder(mz, mxy, deg, dE) and hLadder(...)
  * Here, mz is the quantization mass, mxy an in-plane DOS mass,
  * deg the ladder degeneracy, and dE an shift of the band edge
  * for the ladder (non-negative; the shift is always outward,
  * away from midgap).  When present, we solve the Schroedinger
  * equation separately for each ladder

  * Temperatures in rescaling of the mxy for eLadder and hLadder
	ShiftTemperature	= 1.0000e+10 ,	1.0000e+10	# [K]
}

QuantumPotentialParameters
{ * gamma:  weighting factor for quantum potential
  * theta:  weight for quadratic term
  * xi:     weight for quasi Fermi potential
  * eta:    weight for electrostatic potential
  * nu :    weight for DOS mass change from stress
	gamma	= 1 ,	1	# [1]
	theta	= 0.5 ,	0.5	# [1]
	xi	= 0.0000e+00 ,	0.0000e+00	# [1]
	eta	= 0.0000e+00 ,	0.0000e+00	# [1]
	nu	= 0.0000e+00 ,	0.0000e+00	# [1]
}

    HydrogenDiffusion
      {
        HydrogenAtom
          {
            charge = 0 # [1]
            hydrogen = 1 # [1]
            atd = 1 # [1]
            d0 = 9.5600e-04 # [cm^2/s]
            Ed = 0.2000e+00 # [eV]
            n0 = 1.0000e+00 # [/cm^3]
            krec = 0.0000e+00 # [s^-1 or cm*s^-1]
          }

        HydrogenIon
          {
            charge = 1 # [1]
            hydrogen = 1 # [1]
            d0 = 3.8000e-13 # [cm^2/s]
            Ed = 0.0000e+00 # [eV]
            atd = 1 # [1]
            n0 = 0.0000e+00 # [/cm^3]
            krec = 0.0000e+00 # [s^-1 or cm*s^-1]
          }

        HydrogenMolecule
          {
            charge  = 0 # [1]
            hydrogen = 2 # [1]
            atd = 1 # [1]
            d0 = 3.5000e-11 # [cm^2/s]
            Ed = 0.5000e+00 # [eV]
            n0 = 1.0000e+00 # [/cm^3]
            krec = 0.0000e+00 # [s^-1 or cm*s^-1]
          }
      }

  KMCHydrogenParameters {

    HydrogenAtom {
      d0         = 3.8000e-13	 # [cm^2/s]
      Ed         = 0.0000e+00	 # [eV]
      gamma      = 0.0000e+00	 # [1]
      rate0      = 0.0000e+00	 # [s^-1]
      Erate      = 0.0000e+00	 # [eV]
      gamma_rate = 0.0000e+00	 # [1]
      seg0       = 0.0000e+00	 # [1]
      Eseg       = 0.0000e+00	 # [eV]
      gamma_seg  = 0.0000e+00	 # [1]
    }

    HydrogenIon {
      d0         = 3.8000e-13	 # [cm^2/s]
      Ed         = 0.0000e+00	 # [eV]
      gamma      = 0.0000e+00	 # [1]
      rate0      = 0.0000e+00	 # [s^-1]
      Erate      = 0.0000e+00	 # [eV]
      gamma_rate = 0.0000e+00	 # [1]
      seg0       = 0.0000e+00	 # [1]
      Eseg       = 0.0000e+00	 # [eV]
      gamma_seg  = 0.0000e+00	 # [1]
    }

    HydrogenMolecule {
      d0         = 1.8000e-14	 # [cm^2/s]
      Ed         = 0.0000e+00	 # [eV]
      gamma      = 0.0000e+00	 # [1]
      rate0      = 0.0000e+00	 # [s^-1]
      Erate      = 0.0000e+00	 # [eV]
      gamma_rate = 0.0000e+00	 # [1]
      seg0       = 0.0000e+00	 # [1]
      Eseg       = 0.0000e+00	 # [eV]
      gamma_seg  = 0.0000e+00	 # [1]
    }
  }

RadiativeRecombination * coefficients:
{ * R_Radiative = C * (T/Tpar)^alpha * (n p - ni_eff^2)
  * C    
  * alpha 
	C	= 0.0000e+00	# [cm^3/s]
	alpha	= 0.0000e+00	# []
}

Radiation
{ * G = g * D * ((E+E0)/(E+E1))^m  -  the generation term, 
  *  where E is the electric field, 
  *        E0, E1, m are constants to account the recombination, 
  *        g is the electron-hole creation rate , 
  *        D is the dose rate defined in the input file. 
	g	= 7.6000e+12	# [1/(rad*cm^3)]
	E0	= 0.1	# [V/cm]
	E1	= 1.3500e+06	# [V/cm]
	m	= 0.9	# [1]
}

Resistivity
{ * Resist(T) = Resist0 * ( 1 + TempCoef * ( T - 273 ) )
	Resist0	= 3.0000e+09	# [ohm*cm]
	TempCoef	= 4.5000e-03	# [1/K]
}

